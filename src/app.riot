<app >
    <toast
            visible={ state.toast.visible }
            message={ state.toast.message }
    />

    <overhead
            title={ state.title }
            description={ state.description }
    />

    <loader
            visible={ state.loader }

    />

    <gallery
            id="gallery"
            photoData={ state.photoData }
    />


    <script>
        import Overhead from './components/overhead.riot';
        import Gallery from './components/gallery.riot';
        import Loader from './components/loader.riot';
        import Toast from './components/toast.riot';



        window.addEventListener('scroll', event => {
            let windowRelativeBottom = document.documentElement.getBoundingClientRect().bottom, // нижняя граница документа
                windowHeight = document.documentElement.clientHeight,
                gallery=document.querySelector("#gallery"),
                galleryHeight=gallery.clientHeight

            if (windowRelativeBottom < windowHeight + 300) {            // если пользователь прокрутил достаточно далеко (< 100px до конца)
                // добавим больше данных
                this.UpdaterPhoto()
            }
        });




        export default {
            components: {
                Overhead,
                Gallery,
                Loader,
                Toast
            },
            state: {
                title: "Заголовок",
                description:{
                    OneStr: "Мощный дрон с записью 4K видео, мощной батареей",
                    TwoStr:"и продвинутым автопилотом.",
                },
                photoData: [],
                loader: false,
                toast:{
                    message:"",
                    visible: false
                }
            },
            onMounted(){
                //
                // document.getElementById("gallery").lastChild
                if (localStorage.photoData){
                    this.update({
                        photoData: JSON.parse(localStorage.getItem("photoData"))
                    });
                }else {
                    this.update({
                        loader: true,
                    })
                    fetch('https://api.unsplash.com/photos/?client_id=7ZhdkhVgOacZc6_ibFDJPBbKpmBRJXH8BkR7KOc19So')
                        .then(response => response.json())
                        .then(data => {
                            this.update({
                                photoData:   data,
                                loader:false
                            })
                        })
                }

            },
            onUpdated(){
                localStorage.setItem( "photoData", JSON.stringify( this.state.photoData ));

            },
            UpdaterPhoto(){
                this.update({
                    loader: true,
                })
                fetch('https://api.unsplash.com/photos/?client_id=7ZhdkhVgOacZc6_ibFDJPBbKpmBRJXH8BkR7KOc19So')
                    .then(response => response.json())
                    .then(data => {
                        this.update({
                            photoData:   data,
                            loader:false
                        })
                    })
            }


        }

    </script>

    <style>
       :host {
            display: flex;
            align-items: center;
            flex-direction: column;
            justify-content: center;
            min-height: 100vh;

           -moz-column-fill: balance;
           column-fill: balance;
        }
    </style>

</app>